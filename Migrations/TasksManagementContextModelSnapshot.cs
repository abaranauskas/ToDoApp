// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TasksManagementApp.Infrastructure;

namespace TasksManagementApp.Migrations
{
    [DbContext(typeof(TasksManagementContext))]
    partial class TasksManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TasksManagementApp.Domain.TaskItems.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TaskId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCompleted = false,
                            Name = "Manage team tasks",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsCompleted = true,
                            Name = "Track progress",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            IsCompleted = false,
                            Name = "Buy product",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            IsCompleted = false,
                            Name = "Sell product",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            IsCompleted = false,
                            Name = "Manage transportation",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TasksManagementApp.Domain.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("char(88) CHARACTER SET utf8mb4")
                        .IsFixedLength(true)
                        .HasMaxLength(88);

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("char(172) CHARACTER SET utf8mb4")
                        .IsFixedLength(true)
                        .HasMaxLength(172);

                    b.Property<Guid>("ResetPasswordToken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTimeOffset>("ResetPasswordTokenExpires")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "baranauskas.aidas@gmail.com",
                            Name = "Baranauskas Aidas",
                            PasswordHash = "gLWp0wheQxpUGPaskVRzPZNxOCKrrtyCUhCAc6NXMDoAq/Ue5R3xLBlcndd0KljfixuYOX44alAlgG0gesx6QQ==",
                            PasswordSalt = "Pg8hoAZPebOtXFJZmabdIaAlNpOrPBodPRiM12pDarEixuC062HqQ06nSJEuYKashnD5vGeoxzuhIJvHsSIJjCJ5FpydgYEiW209QvziQvhVykve6efUJZPg/uzHm+HKqdxOxIE2iIlJMLzcTbJxrMO0pOc+rrzvsvlJYXCklpQ=",
                            Role = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "aidas.baranauskas@yahoo.com",
                            Name = "Aidas Baranauskas",
                            PasswordHash = "jSMhlXJhO4uOGhb6jftBnyIgn9FhF8dKR0OC4BjqLt7rshEhSebGHsENXsqwYmD5F7aHvX6h94f1iVlB8B5lhA==",
                            PasswordSalt = "tqpH4P1AMVug1AVm+2ZFaLcSuJ1Hvj+7udjq6KDEMvC5Rpd/2d0fYi2fIuBZTNSS+mUFWuldsDH04U31HB+WqWQpIr0Fv8xNk9ecYR66RtiMBA9zL7deLOfAOWTpEN1VHu4kijABDdYt9M0iUkoFFfapSEcTmDSUwo6HR2ZadJA=",
                            Role = "user"
                        });
                });

            modelBuilder.Entity("TasksManagementApp.Domain.TaskItems.TaskItem", b =>
                {
                    b.HasOne("TasksManagementApp.Domain.Users.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
